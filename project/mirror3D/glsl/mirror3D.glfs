#version 150

uniform float halo_color_strength = 1.0;
uniform bool render_quads = false;

// *** adapted point.glfs ***

in POINT_FS {
	vec2 uv;
	vec4 color;
	vec4 halo_color;
	float percentual_blend_width;
	float percentual_core_size;
	float percentual_point_size;
	float percentual_splat_size;
	float depth_offset;
} fi;

//***** begin interface of fragment.glfs ***********************************
uniform float gamma = 2.2;
void finish_fragment(vec4 color);
void finish_fragment(vec4 color, float depth);
//***** end interface of fragment.glfs ***********************************

//***** begin interface of holo_disp.glfs ***********************************
void compute_sub_pixel_rays(out vec3 ro[3], out vec3 rd[3]);
bool finalize_sub_pixel_fragment(in vec3 rgb, in vec3 depth);
//***** end interface of holo_disp.glfs ***********************************

void main()
{
	vec3 ro[3], rd[3];
	//compute_sub_pixel_rays(ro, rd);
	finish_fragment(fi.color, gl_FragCoord.z+ fi.depth_offset);
	
}